dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-actuator-autoconfigure'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation project(":core")
    implementation project(":repository")
    implementation project(":common")

}

// frontend copy
clean.delete fileTree("src/main/resources/static").include("**/*")
tasks.register('copyToStatic', Copy) {
    def staticDir = "src/main/resources/static"
    def staticFolder = new File("$rootDir/webapp/" + staticDir)
    if (!staticFolder.exists()) {
        staticFolder.mkdir()
    }
    from project(":frontend").file("dist")
    into staticDir
}
copyToStatic.dependsOn ":frontend:build"
processResources.dependsOn copyToStatic